@using System.Web;
@using TriviaRoyale.Client.Shared.Components
@using TriviaRoyale.Shared;
@inject PlayerService service;


@*<h3>GameEnd</h3>
<p>Antal spelare: @service.Players.Count</p>
<p>Mitt namn: @service.Player.Name</p>*@

@*@foreach (var player in service.Players)
{
	<div>
		<h4>@player.Name</h4>
		<p>Score: @player.Points</p>
	</div>
}*@
@*string firstPlayerName = players[0].Name;*@
@if(winner)
{

	<h1 class="text-light bg-success">YOU WIN!</h1>
	<p class="text-black bg-info">Points: @service.Player.Points</p>


}
else
{
	<h1 class="text-light bg-danger">YOU LOSE </h1>
	<p class="text-black bg-info">Points">Winner: @players[0].Name  </p>
	<p class="text-black bg-info">Points">Winner score: @players[0].Points  </p>
	<p class="text-black bg-info">Points">Points: @service.Player.Points</p>

}

<h2>Result:</h2>

@foreach(var player in service.Players)
{



	<table class="table table-condensed">
		<tr>
			<th>Position</th>
			<th>Name</th>
			<th>Points</th>
		</tr>
		<tr>
			<td>@(i++)</td>
			<td>@player.Name</td>
			<td>@player.Points</td>
		</tr>

	</table>
}
@code {

	int i = 1;

	List<Player> players;

	public bool winner { get; set; } = false;

	protected override Task OnInitializedAsync()
	{
		players = service.Players.OrderByDescending(p => p.Points).ToList();



		if(service.Player.Name == players.First().Name)
		{
			winner = true;
		}
		else
			winner = false;

		StateHasChanged();

		return base.OnInitializedAsync();
		base.OnInitialized();
	}


	//protected override void OnInitialized()
	//{
	//}



}
