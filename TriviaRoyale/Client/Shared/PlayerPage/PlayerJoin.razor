@using TriviaRoyale.Shared;
@using TriviaRoyale.Client;
@inject NavigationManager Navigation
@inject PlayerService service;




<div class="d-flex flex-column justify-content-center align-items-center" style="height: 100vh;">
    <form>



        <div class="form-group">
            <label for="emoji-category">Select Emoji Category:</label>
            <br>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="people" name="emoji-category" value="people" checked>
                <label class="form-check-label" for="people">People</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="animals" name="emoji-category" value="animals">
                <label class="form-check-label" for="animals">Animals</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="food" name="emoji-category" value="food">
                <label class="form-check-label" for="food">Food</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="activities" name="emoji-category" value="activities">
                <label class="form-check-label" for="activities">Activities</label>
            </div>
        </div>
        <div class="form-group">
            <label for="emoji-selector">Select Emoji:</label>
            <br>
            <div class="form-check form-check-inline" id="people">
                <input class="btn-check" type="radio" name="emoji-selector" id="smiling_face" value="smiling_face">
                <label class="btn btn-outline-primary h1" for="smiling_face">😀</label>
            </div>
            <div class="form-check form-check-inline" id="people">
                <input class="btn-check" type="radio" name="emoji-selector" id="winking_face" value="winking_face">
                <label class="btn btn-outline-primary h1" for="winking_face">😉</label>
            </div>
            <div class="form-check form-check-inline" id="people">
                <input class="btn-check" type="radio" name="emoji-selector" id="thumbs_up" value="thumbs_up">
                <label class="btn btn-outline-primary h1" for="thumbs_up">👍</label>
            </div>
            <div class="form-check form-check-inline" id="animals">
                <input class="btn-check" type="radio" name="emoji-selector" id="dog" value="dog">
                <label class="btn btn-outline-primary" for="dog">🐶</label>
            </div>

        </div>




        <div>
            <label for="name">Name:</label>
            <input class="form-control mb-2" type="text" id="name" @bind="player.Name" />
        </div>
        <p class="text-danger" style="display:@(ErrorMessageVisibility ? "block" : "none")">Name is required</p>
        <button class="btn btn-primary p-2" type="submit" @onclick="CreatePlayer" @onclick:preventDefault>READY</button>
    </form>
</div>


@code {
    [Parameter]
    public string RoomID { get; set; }
    private Player player = new Player();
    private bool ErrorMessageVisibility { get; set; } = false;



    private async Task CreatePlayer()
    {

        if(string.IsNullOrEmpty(player.Name))
        {
            ErrorMessageVisibility = true;
            return;
        }
        ErrorMessageVisibility = false;
        player.RoomID = RoomID;

        await service.hubConnection.SendAsync("CreatePlayer", player);

    }
}
