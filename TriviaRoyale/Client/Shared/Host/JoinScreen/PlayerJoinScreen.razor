@using System.Web;
@using TriviaRoyale.Client.Shared.Components

@inject HostService service;
@inject NavigationManager navigation;
<h3>PlayerJoinScreen</h3>

<div class="container">
    <div class="row mb-5">
        <div class="d-flex justify-content-between ">
            <div id="QR-output" class="col-6">
                <a href="@(navigation.BaseUri + $"player/{service.RoomID}")" target="_blank">
                    @if (service.RoomID != null)
                    {
                        <img class="img-fluid" src="@($"{navigation.BaseUri}qr/"+HttpUtility.UrlEncode(navigation.BaseUri + $"player/{service.RoomID}"))" alt="QRcode with link to game" />
                    }
                </a>
            </div>
            <div id="player-list" class="border-2 flex-grow-1 bg-dark p-3 rounded-4 col-6">
                @if(!service.IsConnected)
                {
                    <div class="d-flex justify-content-center text-light">
                        <h5 class="me-3">Connecting to server</h5>
                        <span class="spinner-border" role="status"></span>
                    </div>
                }
                else if(service.Players.Count == 0)
                {
                    <div class="d-flex justify-content-center text-light">
                        <h5 class="me-3">Waiting for players</h5>
                        <span class="spinner-border" role="status"></span>
                    </div>
                }
                else
                {
                    <div class="d-flex">
                        @foreach(var player in service.Players)
                        {
                            <PlayerComponent Player="player" />
                        }
                    </div>
                    <div class="d-flex justify-content-center text-light">
                        <h5 class="me-3">Waiting for more players</h5>
                        <span class="spinner-border" role="status"></span>
                    </div>
                    <div class="d-flex justify-content-center text-light">
                        <h5 class="me-3">Press "Start Game" When everyone is ready</h5>
                        
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="d-flex justify-content-center">
            @if (service.Players.Count < 2)
            {
                <button class="btn btn-secondary p-5" disabled @onclick="StartGame">
                    <span class="h1">
                        Start Game
                    </span>
                </button>
            }
            else
            {
                <button class="btn btn-success p-5" @onclick="StartGame">
                    <span class="h1">
                        Start Game
                    </span>
                </button>
            }
        </div>
    </div>
</div>

@code {
    
    void StartGame()
    {
        service.StartGame();
    }

    protected override  void OnInitialized()
    {
        service.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        service.OnChange -= StateHasChanged;
    }

}
